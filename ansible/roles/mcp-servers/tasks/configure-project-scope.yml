---
- name: Ensure project directory exists
  stat:
    path: "{{ mcp_project_path }}"
  register: project_dir_stat
  
- name: Fail if project directory does not exist
  fail:
    msg: "Project directory '{{ mcp_project_path }}' does not exist!"
  when: not project_dir_stat.stat.exists or not project_dir_stat.stat.isdir

- name: Get list of existing project-scoped MCP servers
  command: claude mcp list
  args:
    chdir: "{{ mcp_project_path }}"
  register: existing_project_servers
  changed_when: false
  failed_when: false

- name: Parse existing server names
  set_fact:
    existing_server_names: >-
      {%- set names = [] -%}
      {%- if existing_project_servers.rc is defined and existing_project_servers.rc == 0 -%}
        {%- for line in existing_project_servers.stdout_lines | default([]) -%}
          {%- if line and not line.startswith('Name') and not line.startswith('---') and line.strip() -%}
            {%- set parts = line.split() -%}
            {%- if parts|length > 1 and parts[1] == 'project' -%}
              {%- set _ = names.append(parts[0]) -%}
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
      {{ names | list }}

- name: Configure selected MCP servers
  include_tasks: add-mcp-server.yml
  vars:
    server_name: "{{ item }}"
    server_config: "{{ mcp_servers[item] }}"
    server_scope: "project"
  loop: "{{ servers_to_configure }}"
  when: item in mcp_servers