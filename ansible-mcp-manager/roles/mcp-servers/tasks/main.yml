---
- name: Load MCP servers from JSON config
  include_tasks: load-config.yml

- name: Determine which servers to configure
  set_fact:
    servers_to_configure: >-
      {%- set selected_servers = [] -%}
      {%- if mcp_mode == 'all' -%}
        {%- for server_name in mcp_servers.keys() -%}
          {%- if mcp_servers[server_name].enabled -%}
            {%- set _ = selected_servers.append(server_name) -%}
          {%- endif -%}
        {%- endfor -%}
      {%- elif mcp_mode == 'group' and mcp_group in mcp_server_groups -%}
        {%- for server_name in mcp_server_groups[mcp_group] -%}
          {%- if server_name in mcp_servers and mcp_servers[server_name].enabled -%}
            {%- set _ = selected_servers.append(server_name) -%}
          {%- endif -%}
        {%- endfor -%}
      {%- elif mcp_mode == 'individual' and mcp_servers_list -%}
        {%- for server_name in mcp_servers_list.split(',') -%}
          {%- set cleaned_name = server_name.strip() -%}
          {%- if cleaned_name in mcp_servers and mcp_servers[cleaned_name].enabled -%}
            {%- set _ = selected_servers.append(cleaned_name) -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
      {{ selected_servers | list }}

- name: Validate server selection
  fail:
    msg: |
      No servers selected for configuration!
      {% if mcp_mode == 'group' %}
      Group '{{ mcp_group }}' not found or contains no enabled servers.
      Available groups: {{ mcp_server_groups.keys() | join(', ') }}
      {% elif mcp_mode == 'individual' %}
      None of the specified servers ({{ mcp_servers_list }}) are valid or enabled.
      Available servers: {{ mcp_servers.keys() | join(', ') }}
      {% endif %}
  when: servers_to_configure | length == 0

- name: Clean up old MCP servers
  include_tasks: cleanup-mcp-servers.yml
  when: mcp_cleanup_orphaned | default(true)

- name: Configure servers based on scope
  include_tasks: "configure-{{ mcp_scope }}-scope.yml"

- name: Manage disabled servers list
  include_tasks: manage-disabled-servers.yml
  vars:
    server_scope: "{{ mcp_scope }}"

- name: Display summary
  debug:
    msg: |
      MCP servers configuration complete!
      
      Scope: {{ mcp_scope }}{% if mcp_scope == 'project' %} ({{ mcp_project_path }}){% endif %}
      Mode: {{ mcp_mode }}
      
      Servers configured:
      {% for server_name in servers_to_configure %}
      - {{ server_name }}{% if mcp_servers[server_name].requires_env is defined %} (API key: {{ 'configured' if mcp_servers[server_name].env is defined and mcp_servers[server_name].env.values() | select | list | length > 0 else 'missing' }}){% endif %}
      {% endfor %}
      
      Total: {{ servers_to_configure | length }} servers